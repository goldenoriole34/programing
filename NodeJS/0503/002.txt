00. 목표
  이번주 내 게시판을 혼자 만들수 있어야 한다.
  DB까지!

01. 게시판을 만들려면?
  화면부터 구성하는 것이 유리함
  버튼?
  get게시판 리스트가 있을 때 필수로 들어가야 하는 페이지?
  get리스트 페이지
  get게시판 뷰 - 뒤로가기, 수정하기, 삭제하기
  get게시판 글쓰기 - 등록하기, 목록가기
  get게시판 수정 - 수정, 목록가기

  Request message는 - get/post인데 위 페이지들은 모두 GET을 쓴다.

  CRUD / API 설계서 (만들어야 할 라우터들이다)
    GET/board/list,
    GET/board/view,
    GET/board/write,
    GET/board/modify

    POST/board/delete (삭제)
    POST/board/write (글쓰기)
    POST/board/modify or update (글수정)

  데이터를 입력하는 경우는 post이며 res.redirect로 처리해줘야한다.
  list write view는 최소한의 구성
  고로 화면 페이지를 구성하기 전 라우터를 반드시 먼저 해야한다.

02. 경로!
  view에 index라고만 명시했는데 된다??
  routes/index.js => .../views/index.html 
  랜더메소드는 넌작스 템플릿 엔진으로 작업이 되는 것이다.
  랜더메소드는 무조건 views 디렉토리만 지정되어 있다!!

  index로 하면 경로값을 다 안해줘도 된다
  index가 아니라 다른 파일명을 한다면 /상세경로를 다 줘야한다.

03. express는 파일을 분배하기 위해 routes를 만들었다??
  

04.  // app.get('/', (req, res) => {
  //   res.send('hello world');
  // })

  // app.use('/a',
  //   routers.get('/b',(req, res)=> {
  //     res.send('hello world')
  //   })
  // )
  //모양이 다중if문 같다

tip. index.js parh값 regexp는 정규식으로 표현되어 있다.
  텍스트의 규칙을 찾기 위해 만들어짐
  js 정규식 관련 함수를 먼저 공부하고 생활코딩 정규식 참고하기
  그 다음 드림코딩
  회원가입이나 로그인시 이메일인지 아닌지 등등 확인하는 용도로 제작할 수 있음

05. 파일 순서를 이해해야한다.
  router 안에 미들웨어도 분배하기 위해 MVC패턴 등을 사용한다.


드디어...라우트를..배웠다...
폼 - post로 보낼지 get으로 보낼지 결정
이걸 씀 브라우저가 자동으로 text로 생성해주는 응/반 메세지를 html이 만들어주게 된다. 그리고 백으로 전송
get으로 햇으면 미들웨어도 get으로 해줘야함. post면 당연히 post

액션- url지정
enctype="application/x-www-form-urlencoded"이 기본값이다.

미들웨어의 랜더로 응답메세지를 하지 않으면 계속 빙빙글 돈다

데이터를 보내면 express가 네트웤payload에서 찾아 읽는다.

익스프레스 - 요청을 보내고 응답을 대기 (클라)
브라우저 - 요청을 받아 응답을 보내줌 (서버)

Request.method
- GET / POST
기본적으로 a태그를 쓰거나 자잘자잘하게 GET으로 자동사용했다.
post로 보낼 수 있는 방법은 form 밖에 없다.
ㄴwrite = post로 써야하는 이유
뒤 url주소로 포스트 값을 보낸다는 것임

post로 보낸 값을 익스프레스가 받아줘야한다!!
- 그러려면 리퀘메세지에 적혀있어야 한다.
-(GET은 URL에 보이는데 POST는 안보이는 이유)
그런데 내용에 어떻게 서브젝트나 이런게 표시됨?
ㄴname으로 이름을 넣어주면 변수처럼 인식 됨
ㄴname안쓰면 payload가 아예 안됨/응답이 비정상으로 인식됨
네임 중요해!!!!!!!!

위 내용을 이해하면
axios/fetch를 사용하기에 어려움이 없다.
axios는 url 이동 없이 
응답은 js로 받음
필수로 할 줄 알아야 한다.




데이터를 받아오는 방법
요청해서 값을 제대로 보냈으면
익스프레스에서 받아야한다.

const writeAction = (req, res)=> {
  console.log(req.body.subject, req.body.content);

}
이렇게만 하면 안된다.
받은 값을 읽으려면 req.body를 읽어오기 위해 app.use(express.urlencoded({extended:ture})) 쓴다

post의 특징은 정보 전달이지 페이지 표현이 아니라 반드시 redirect로가야한다.
render는 html을 가져오기 위해 뷰를 기본으로 한다.
redirect는 url을 변경하기 위해 가져온다


디비없이 뷰 띄우려면
전역변수로 item을 만들어
